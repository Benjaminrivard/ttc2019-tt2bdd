aspect Analysis {

  syn int BDD.decisionNodeCount() {
    int result = 0;
    for (BDD_Tree node: getTreeList()) {
      if (node.isSubtree()) {
        result++;
      }
    }
    return result;
  }

  syn int BDD.assignmentNodeCount() {
    return getNumTree() - decisionNodeCount();
  }

  syn int BDT.decisionNodeCount() = getTree().decisionNodeCount();

  syn int BDT_Tree.decisionNodeCount();
  eq BDT_Subtree.decisionNodeCount() = 1 + getTreeForZero().decisionNodeCount() + getTreeForOne().decisionNodeCount();
  eq BDT_Leaf.decisionNodeCount() = 0;

  syn int BDT.assignmentNodeCount() = getTree().assignmentNodeCount();

  syn int BDT_Tree.assignmentNodeCount();
  eq BDT_Subtree.assignmentNodeCount() = getTreeForZero().assignmentNodeCount() + getTreeForOne().assignmentNodeCount();
  eq BDT_Leaf.assignmentNodeCount() = 1;

}
